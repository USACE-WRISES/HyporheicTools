# What is pyproject.toml and why you want it
# pyproject.toml is the single, standard file that:
# Describes your project (name, version, Python requirement, dependencies).
# Defines how to build/install it (build backend like setuptools).
# Exposes entry points (so you get a hyporheic CLI command).
# Packages non-code assets (your .pyt, .lyrx, .xml, inputs.yaml) into the wheel/sdist.
# Centralizes dev/test tool configs (pytest, ruff, black, etc.).
# It replaces old scattered files (like setup.py, setup.cfg) with a PEP‑621 compliant, future‑proof format that pip and build tools understand.

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hyporheic-tools"                # pip distribution name (matches repo)
version = "0.1.0"
description = "Hyporheic modeling toolkit: MODFLOW 6 + MODPATH 7 with CLI and ArcGIS Pro toolbox integration."
readme = "README.md"
requires-python = ">=3.11,<3.13"
license = { file = "LICENSE" }

authors = [{ name = "Your Name", email = "you@example.com" }]

keywords = [
  "hyporheic", "groundwater", "hydrology", "MODFLOW", "MODPATH",
  "flopy", "geopandas", "rasterio", "ArcGIS", "GIS"
]

classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Hydrology",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: OS Independent"
]

# Keep arcpy OUT; it comes from ArcGIS Pro.
dependencies = [
  "numpy",
  "scipy",
  "pandas",
  "matplotlib",
  "seaborn",
  "shapely",
  "pyproj",
  "rasterio",
  "geopandas",
  "pydantic>=2",
  "PyYAML",
  "tabulate",
  "xarray",
  "netCDF4",
  "flopy",
  "modflow-devtools"
]

[project.optional-dependencies]
dev = ["ruff>=0.4", "black>=24.3", "mypy>=1.10", "pre-commit>=3.5"]
test = ["pytest>=8.2", "pytest-cov>=5.0"]

[project.urls]
Homepage = "https://github.com/USACE-WRISES/HyporheicTools"
Repository = "https://github.com/USACE-WRISES/HyporheicTools"
Issues = "https://github.com/USACE-WRISES/HyporheicTools/issues"

[project.scripts]
# After install, you can run: hyporheic ...   (alias: hyp)
hyporheic = "HyporheicTools.cli.main:main"
hyp = "HyporheicTools.cli.main:main"

[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["HyporheicTools*"]

[tool.setuptools.package-data]
# Ship your toolbox & assets inside the wheel.
HyporheicTools = [
  "bin/modflow/**",
  "data/templates/inputs_TEMPLATE.yaml",
  "esri/toolboxes/Hyporheic_Toolbox.pyt",
  "esri/symbology/*.lyrx",
  "esri/help/gp/toolboxes/Hyporheic_Toolbox.xml"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-ra"
markers = ["slow: marks tests as slow (use RUN_SLOW=1 or -m slow to run)"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "I", "UP"]
